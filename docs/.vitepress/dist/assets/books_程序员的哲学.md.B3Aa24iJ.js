import{_ as a,c as l,o as i,a2 as e}from"./chunks/framework.CBOTroAR.js";const m=JSON.parse('{"title":"程序员的哲学","description":"","frontmatter":{},"headers":[],"relativePath":"books/程序员的哲学.md","filePath":"books/程序员的哲学.md"}'),o={name:"books/程序员的哲学.md"},t=e('<h1 id="程序员的哲学" tabindex="-1">程序员的哲学 <a class="header-anchor" href="#程序员的哲学" aria-label="Permalink to &quot;程序员的哲学&quot;">​</a></h1><h2 id="注重实效的哲学" tabindex="-1">注重实效的哲学 <a class="header-anchor" href="#注重实效的哲学" aria-label="Permalink to &quot;注重实效的哲学&quot;">​</a></h2><ol><li>不找接口，给出选择</li><li>关注破窗效应</li><li>主观能动性</li><li>记住大图景，与熵战斗</li><li>使质量成为需求问题</li><li>定期增加自己的知识资产</li><li>批判的分析你看到的</li><li>有效交流</li></ol><h2 id="注重实效的途径" tabindex="-1">注重实效的途径 <a class="header-anchor" href="#注重实效的途径" aria-label="Permalink to &quot;注重实效的途径&quot;">​</a></h2><ol><li>不要重复你自己</li><li>让复用变得更容易</li><li>消除无关事物之间的相互影响，即正交性</li><li>不存在最终决策</li><li>估算，避免发生意外</li></ol><h2 id="注重实效的偏执" tabindex="-1">注重实效的偏执 <a class="header-anchor" href="#注重实效的偏执" aria-label="Permalink to &quot;注重实效的偏执&quot;">​</a></h2><ol><li>你不可能写出完美的软件</li><li>要有始有终</li></ol><h2 id="元程序设计" tabindex="-1">元程序设计 <a class="header-anchor" href="#元程序设计" aria-label="Permalink to &quot;元程序设计&quot;">​</a></h2><ol><li>要配置，不要集成</li><li>将抽象放进代码，细节放进元数据</li></ol><h2 id="时间耦合" tabindex="-1">时间耦合 <a class="header-anchor" href="#时间耦合" aria-label="Permalink to &quot;时间耦合&quot;">​</a></h2><ol><li>分析工作流，改善并发性</li></ol><h2 id="在项目开始之前" tabindex="-1">在项目开始之前 <a class="header-anchor" href="#在项目开始之前" aria-label="Permalink to &quot;在项目开始之前&quot;">​</a></h2><ol><li>不要搜集需求--挖掘他们</li><li>与用户一同工作，以像用户一样思考</li><li>抽象比细节活得更长久</li><li>使用项目词汇表</li><li>不要在盒子外面思考，要找到盒子。 面对棘手问题，列出所有途径，挨个排除</li></ol><h2 id="注重实效的团队" tabindex="-1">注重实效的团队 <a class="header-anchor" href="#注重实效的团队" aria-label="Permalink to &quot;注重实效的团队&quot;">​</a></h2><ol><li>温和的超出用户的期望</li></ol>',15),r=[t];function h(n,s,d,c,_,u){return i(),l("div",null,r)}const f=a(o,[["render",h]]);export{m as __pageData,f as default};
