import{_ as t,c as e,o as a,a2 as A}from"./chunks/framework.CBOTroAR.js";const x=JSON.parse('{"title":"计算之魂","description":"","frontmatter":{},"headers":[],"relativePath":"others/计算之魂.md","filePath":"others/计算之魂.md"}'),o={name:"others/计算之魂.md"},_=A('<h1 id="计算之魂" tabindex="-1">计算之魂 <a class="header-anchor" href="#计算之魂" aria-label="Permalink to &quot;计算之魂&quot;">​</a></h1><ol><li>如何通过指令控制，将一副扑克牌变成一种简单的计算机 计算机由存储单元、计算单元、指令序列组成。 一副牌数量是A-K各4张，共52张，类比算盘用五进制，规则如下： A-K分别为从低到高的进制位，从右往左放 KKKK | QQQQ | JJJJ | 10 10 10 10 | 9999 | 8888 | 7777 | 6666 | 5555 | 4444 | 3333 | 2222 | AAAA</li></ol><p>32用如下表示，省略左边高位 3 | 2 | AA 333 | 222 | AA</p><p>24用如下表示，省略左边高位 2 | AAAA 222 |</p><p>32 - 24 用如下表示，省略左边高位 3 | 2 | AA 3 | | AAA | 2 | AAA 333 | 222 | AA =&gt; 333 | 2222 | A =&gt; 3333 | 222 | A 2借5 - 4，最低位为3，较高位-1为0 0借5 - 4，余1，最高位-1为0</p><p>32 + 24 用如下表示，省略左边高位 3 | 2 | AA 3 | 22 | A 33 | 2 | A 333 | 222 | AA =&gt; 333 | 22 | A =&gt; 33 | 222 | AAA 2+4,进1余1<br> 2+4,进1余1 1+1,余2</p><ol start="2"><li>利用与非运算实现与、或、非三种运算 与非 用x表示 1x1=0 1x0=1 0x1=1 0x0=1 not: a x 1 and: !(a x b) or: !a x !b</li></ol><p>递归的逆向思维，即自顶向下的思维，拆分成重复的小问题</p><p>25名 每次5个 多少次决出前三</p>',9),r=[_];function s(n,p,c,i,l,d){return a(),e("div",null,r)}const m=t(o,[["render",s]]);export{x as __pageData,m as default};
