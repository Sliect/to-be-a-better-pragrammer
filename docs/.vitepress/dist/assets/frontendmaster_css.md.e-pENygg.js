import{_ as t,c as e,o as i,a2 as r}from"./chunks/framework.CBOTroAR.js";const u=JSON.parse('{"title":"CSS","description":"","frontmatter":{},"headers":[],"relativePath":"frontendmaster/css.md","filePath":"frontendmaster/css.md"}'),o={name:"frontendmaster/css.md"},a=r('<h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h1><h2 id="可见格式化模型" tabindex="-1">可见格式化模型 <a class="header-anchor" href="#可见格式化模型" aria-label="Permalink to &quot;可见格式化模型&quot;">​</a></h2><p>盒模型：外边距, 边框, 内边距, 内容</p><p>清除浮动会给元素添加外边距，为前面的浮动元素留出足够的空间</p><p>行内元素给父元素共吸纳的高度根据行高计算</p><p>margin-left: auto; 可以使元素左边外边距填满，来到最右边</p><h2 id="grid布局" tabindex="-1">grid布局 <a class="header-anchor" href="#grid布局" aria-label="Permalink to &quot;grid布局&quot;">​</a></h2><p>容器属性：<br> grid-template-columns 列宽</p><p>grid-template-rows 行高</p><p>grid-row-gap 行间距</p><p>grid-column-gap 列间距</p><p>grid-auto-flow 子元素排列顺序</p><p>justify-items 单元格内容水平位置</p><p>align-items 单元格内容垂直位置</p><p>justify-content 整个内容区域在容器里面的水平位置</p><p>align-content 整个内容区域的垂直位置</p><p>项目属性：<br> grid-column-start 左边框所在的垂直网格线（从1开始）</p><p>grid-column-end 右边框所在的垂直网格线</p><p>grid-row-start 上边框所在的水平网格线</p><p>grid-row-end 下边框所在的水平网格线</p><p>grid-column grid-column-start / grid-column-end</p><p>grid-row grid-row-start / grid-row-end</p><p>justify-self, align-self 适用于单个</p><h2 id="浏览器解析css" tabindex="-1">浏览器解析css <a class="header-anchor" href="#浏览器解析css" aria-label="Permalink to &quot;浏览器解析css&quot;">​</a></h2><ol><li><p>构建DOM对象和CSSOM对象，每个CSS选择符匹配一个DOM节点，浏览器计算最终样式</p></li><li><p>渲染树</p></li><li><p>布局/重排，计算位置</p></li><li><p>绘制、合成与呈现</p></li></ol><h2 id="css属性排列顺序" tabindex="-1">css属性排列顺序 <a class="header-anchor" href="#css属性排列顺序" aria-label="Permalink to &quot;css属性排列顺序&quot;">​</a></h2><p>布局 =&gt; 尺寸 =&gt; 界面 =&gt; 文字 =&gt; 交互</p><ol><li><p>布局 显示：display visibility<br> 溢出：overflow overflow-x overflow-y<br> 浮动：float clear<br> 定位：position left right top bottom z-index<br> 列表：list-style list-style-type list-style-position list-style-image<br> 表格：table-layout border-collapse border-spacing caption-side empty-cells<br> 弹性：flex-flow flex-direction flex-wrap justify-content align-content align-items align-self flex flex-grow flex-shrink flex-basic order<br> 多列：columns column-width column-count column-gap column-rule column-rule-width column-rule-style column-rule-color column-span column-fill column-break-before column-break-after column-break-inside<br> 栅格：grid-columns grid-rows</p></li><li><p>尺寸 模型：border-box<br> 边距：margin margin-left margin-right margin-top margin-bottom<br> 填充：padding padding-left padding-right padding-top padding-bottom<br> 边框：border border-width border-style border-color border-colors border-[direction]-<param><br> 圆角：border-radius border-top-left-radius border-top-right-radius border-bottom-left-radius border-bottom-right-radius<br> 框图：border-image border-image-source border-image-slice border-image-width border-image-outset border-image-repeat<br> 大小：width min-width max-width height min-height max-height</p></li><li><p>界面属性 外观：appearance<br> 轮廓：outline outline-width outline-style outline-color outline-offset outline-radius outline-radius-[direction]<br> 背景：background background-color background-image background-repeat background-repeat-x background-repeat-y background-position background-position-x background-position-y background-size background-origin background-clip background-attachment bakground-composite<br> 遮罩：mask mask-mode mask-image mask-repeat mask-repeat-x mask-repeat-y mask-position mask-position-x mask-position-y mask-size mask-origin mask-clip mask-attachment mask-composite mask-box-image mask-box-image-source mask-box-image-width mask-box-image-outset mask-box-image-repeat mask-box-image-slice<br> 滤镜：box-shadow box-reflect filter mix-blend-mode opacity<br> 裁剪：object-fit clip<br> 事件：resize zoom cursor pointer-events touch-callout user-modify user-focus user-input user-select user-drag</p></li><li><p>文字属性 模式：line-height line-clamp vertical-align direction unicode-bidi writing-mode ime-mode<br> 文本：text-overflow text-decoration text-decoration-line text-decoration-style text-decoration-color text-decoration-skip text-underline-position text-align text-align-last text-justify text-indent text-stroke text-stroke-width text-stroke-color text-shadow text-transform text-size-adjust<br> 字体：src font font-family font-style font-stretch font-weight font-variant font-size font-size-adjust color<br> 内容：overflow-wrap word-wrap word-break word-spacing letter-spacing white-space caret-color tab-size content counter-increment counter-reset quotes page page-break-before page-break-after page-break-inside</p></li><li><p>交互模式 模式：will-change perspective perspective-origin backface-visibility<br> 变换：transform transform-origin transform-style<br> 过渡：transition transition-property transition-duration transition-timing-function transition-delay<br> 动画：animation animation-name animation-duration animation-timing-function animation-delay animation-iteration-count animation-direction animation-play-state animation-fill-mode</p></li></ol>',28),n=[a];function s(l,d,c,p,m,g){return i(),e("div",null,n)}const f=t(o,[["render",s]]);export{u as __pageData,f as default};
