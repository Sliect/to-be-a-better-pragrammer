import{_ as a,c as e,o as i,a2 as s}from"./chunks/framework.CBOTroAR.js";const u=JSON.parse('{"title":"nodejs","description":"","frontmatter":{},"headers":[],"relativePath":"frontendmaster/nodejs.md","filePath":"frontendmaster/nodejs.md"}'),t={name:"frontendmaster/nodejs.md"},l=s(`<h1 id="nodejs" tabindex="-1">nodejs <a class="header-anchor" href="#nodejs" aria-label="Permalink to &quot;nodejs&quot;">​</a></h1><p>Module Wrapper</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// exports 是 module的引用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">__filename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">__dirname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {})</span></span></code></pre></div><h2 id="file" tabindex="-1">File <a class="header-anchor" href="#file" aria-label="Permalink to &quot;File&quot;">​</a></h2><ul><li>fs.dir 操作目录的子模块，提供dir.read、dir.readSync等 API 来读取目录信息</li><li>fs.createReadStream() 创建一个读文件流对象</li><li>fs.createWriteStream() 创建一个写文件流对象</li><li>fs.stat(), fs.statSync() 读取文件信息，包括文件状态、权限、创建时间、修改时间等信息</li><li>fs.appendFile(), fs.appendFileSync() 追加内容到文件</li><li>fs.chmod(), fs.chown() 改变文件权限、权限组</li><li>fs.copyFile(), fs.copyFileSync() 拷贝文件</li><li>fs.mkdir(), fs.mkdirSync() 创建目录</li><li>fs.rename(), fs.renameSync() 修改文件名</li><li>fs.rmdir(), fs.rmdirSync() 删除目录</li><li>fs.unlink(), fs.unlinkSync() 删除文件</li><li>fs.watchFile() 监听文件内容变化</li><li>fs.writeFile(), fs.writeFileSync() 写入文件</li></ul><h2 id="net" tabindex="-1">Net <a class="header-anchor" href="#net" aria-label="Permalink to &quot;Net&quot;">​</a></h2><h2 id="http" tabindex="-1">Http <a class="header-anchor" href="#http" aria-label="Permalink to &quot;Http&quot;">​</a></h2><h2 id="url" tabindex="-1">URL <a class="header-anchor" href="#url" aria-label="Permalink to &quot;URL&quot;">​</a></h2><h2 id="path" tabindex="-1">Path <a class="header-anchor" href="#path" aria-label="Permalink to &quot;Path&quot;">​</a></h2><h2 id="process" tabindex="-1">Process <a class="header-anchor" href="#process" aria-label="Permalink to &quot;Process&quot;">​</a></h2><h2 id="buffer" tabindex="-1">Buffer <a class="header-anchor" href="#buffer" aria-label="Permalink to &quot;Buffer&quot;">​</a></h2><h2 id="console" tabindex="-1">Console <a class="header-anchor" href="#console" aria-label="Permalink to &quot;Console&quot;">​</a></h2><h2 id="crypto" tabindex="-1">Crypto <a class="header-anchor" href="#crypto" aria-label="Permalink to &quot;Crypto&quot;">​</a></h2><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2>`,14),n=[l];function r(h,o,d,c,p,k){return i(),e("div",null,n)}const m=a(t,[["render",r]]);export{u as __pageData,m as default};
